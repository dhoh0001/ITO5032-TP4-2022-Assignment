@using ITO5032_Assignment.Models
@model LoginViewModel

@{
    ViewBag.Title = "Welcome";
}
@if (!Request.IsAuthenticated)
{
    <div class="row">
        <h3>@ViewBag.Message</h3>
        <div >
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Home", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email, new { @class = "col-md-5 control-label" })
                        <div class="col-md-7">
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-5 control-label" })
                        <div class="col-md-7">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-5 col-md-7">
                            <input type="submit" value="Log in" class="btn btn-default" />
                            <a href="/Home/ResetPW" class="btn btn-default">Reset Password</a>
                            <a href="/Home/ExternalLoginsList" class="btn btn-default">External Login</a>

                        </div>
                    </div>
                }
            </section>
        </div>
    </div>
}
else
{
    <div><h1>Welcome to Dogs and Tots!</h1></div>
    <div><h2>Locations</h2></div>
    <div id='map'></div>
    <script>
        // The value for 'accessToken' begins with 'pk...'
        mapboxgl.accessToken = 'pk.eyJ1IjoiZGhvaDAwMDEiLCJhIjoiY2w2bHphbmFiMDJzcDNlcXFwbW83cDJsYiJ9.A5eUUVQZ9lh7dG0znZaryw';
        const map = new mapboxgl.Map({
            container: 'map',
            // Replace YOUR_STYLE_URL with your style URL.
            style: 'mapbox://styles/mapbox/streets-v11',
            center: [-87.661557, 41.893748],
            zoom: 10.7
        });

        // Code from the next step will go here.

    </script>
}